result<-NULL
for (k in 1:10){
result[[k]]<-kmeans(data2,k,nstart=10)
}
## 1) Elbow point
# The total within-cluster sum of square(wss)이 작을수록 좋습니다.
# wss의 그래프을 그려보고 elbowpoint를 참고하겠습니다.
wss <- numeric(10)
for(k in 1:10){
wss[k]<-result[[k]]$tot.withinss
}
plot(wss,type="l")
abline(v=c(2,3),col="red",lty=2)
plot(data2, pch=result[[2]]$cluster, col=result[[2]]$cluster)
str(result)
str(result[[3]])
silhouette(kmeans$cluster,dist=dist(data2))
par("usr")
str(usr)
par("usr")[1]
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of 복지 Dataset")
par("usr")[1]
## 3) 시각화
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
panel.fun <- function(x, y, ...) { horizontal <- (par("usr")[1] + par("usr")[2]) / 2;
+ vertical <- (par("usr")[3] + par("usr")[4]) / 2;
+  text(horizontal, vertical, format(abs(cor(x,y)), digits=2)) }
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of 복지 Dataset")
## 3) 시각화
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
panel.fun <- function(x, y, ...) { +
horizontal <- (par("usr")[1] + par("usr")[2]) / 2; + vertical <- (par("usr")[3] + par("usr")[4]) / 2; + text(horizontal, vertical, format(abs(cor(x,y)), digits=2)) }
## 3) 시각화
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
panel.fun <- function(x, y, ...) { +
horizontal <- (par("usr")[1] + par("usr")[2]) / 2; +
vertical <- (par("usr")[3] + par("usr")[4]) / 2; +
text(horizontal, vertical, format(abs(cor(x,y)), digits=2)) }
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of 복지 Dataset")
## 3) 시각화
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
panel.fun <- function(x, y, ...) { horizontal <- (par("usr")[1] + par("usr")[2]) / 2; vertical <- (par("usr")[3] + par("usr")[4]) / 2; text(horizontal, vertical, format(abs(cor(x,y)), digits=2)) }
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of 복지 Dataset")
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of Child welfare Dataset")
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs()
pairs(iris[1:4])
data2
str(head2)
str(data2)
pairs(data2, pch=21, bg=c("red","green3","blue"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=20, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch='o', bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=22, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
result[[2]]$cluster
result[[3]]$cluster
plot(data2, pch=result[[2]]$cluster, upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
plot(data2, pch=result[[2]]$cluster, bg=c("red","green3","blue"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
str(data2)
data3
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[2]]$cluster, col=result[[3]]$cluster)
pairs(data2, pch=21, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
plot(data2, pch=result[[2]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[2]]$cluster, col=result[[2]]$cluster)
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[2]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[2]]$cluster, col=result[[2]]$cluster)
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[4]]$cluster, col=result[[4]]$cluster)
plot(data2, pch=result[[5]]$cluster, col=result[[5]]$cluster)
pairs(data2, pch=21, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
plot(data2, pch=result[[2]]$cluster, col=result[[2]]$cluster)
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
plot(data2, pch=result[[4]]$cluster, col=result[[4]]$cluster)
fviz_cluster(result[[2]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
pairs(data2, pch=21, bg=c("black"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("red"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("blue3"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("blue2"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("blue4"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
pairs(data2, pch=21, bg=c("blue3"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
fviz_cluster(result[[2]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
fviz_cluster(result[[3]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
fviz_cluster(result[[2]],data=data2,geom="point")
fviz_cluster(result[[3]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
fviz_cluster(result[[3]],data=data2,geom="point",stand=TRUE,ellipse.type="norm")
fviz_cluster(result[[3]],data=data2,geom="point",ellipse.type="norm")
fviz_cluster(result[[3]],data=data2,geom="point")
kmeans$centers
kmeans$cluster
packages<-c("fpc", "cluster", "dplyr", "factoextra", "NbClust", "clValid", "FactoMineR", "fclust ")
check.packages(packages)
install.packages("fclust")
packages<-c("fpc", "cluster", "dplyr", "factoextra", "NbClust", "clValid", "FactoMineR", "fclust ")
check.packages(packages)
packages<-c("fpc", "cluster", "dplyr", "factoextra", "NbClust", "clValid", "FactoMineR", "fclust")
check.packages(packages)
data2
str(data2)
#---------- Fuzzy Cluster----------------
# rational starting point Maxtix U
rational_starting_point <- matrix(c(0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5), nrow = 25, ncol = 5, byrow = F)
rational_starting_point
# Fuzzy K-means clustering with FKM() fuctnion of fclust package
data2_FKM <- FKM(X = data2, k = 3, m = 2, startU = rational_starting_point)
# x =  Matrix or data.frame / k =  Number of clusters (default: 2) / m = Parameter of fuzziness (default: 2) / startU = Rational starting point for the membership degree matrix U
data2_FKM
#---------- Fuzzy Cluster----------------
# rational starting point Maxtix U
rational_starting_point <- matrix(c(0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2), nrow = 25, ncol = 5, byrow = F)
# Fuzzy K-means clustering with FKM() fuctnion of fclust package
data2_FKM <- FKM(X = data2, k = 3, m = 2, startU = rational_starting_point)
# x =  Matrix or data.frame / k =  Number of clusters (default: 2) / m = Parameter of fuzziness (default: 2) / startU = Rational starting point for the membership degree matrix U
data2_FKM
data2_FKM$iter
# Fuzzy K-means clustering with FKM() fuctnion of fclust package
data2_FKM <- FKM(X = data2, k = 3, m = 2)
# x =  Matrix or data.frame / k =  Number of clusters (default: 2) / m = Parameter of fuzziness (default: 2) / startU = Rational starting point for the membership degree matrix U
data2_FKM
data2
data2_FKM$iter
abc = read.csv("choropleth.csv")
seoul = korea[korea$SIG_CD<=11740,]
seoul = fortify(seoul,region = 'SIG_CD')
seoul = merge(seoul,abc,by='id')
seoul.label <- read.csv("seoul_label.csv")
packages<-c("ggplot2", "ggmap", "raster", "rgeos", "maptools", "rgdal", "viridis", "mapproj", "extrafont", "ggrepel", "colorspace")
check.packages(packages)
seoul
str(seoul)
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#d53e4f","#a9db95","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
kmeans$centers
#------------------지도 색칠 색상 지정------------------
colours = c("#d53e4f", "#fe9e63", "#ffeca0", "#ffc8e6", "#a9db95","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#d53e4f", "#ffc8e6", "#a9db95")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#d53e4f", "#ffc8e6","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#d53e4f", "#fe9e63", "#ffeca0", "#ffc8e6", "#a9db95","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#3e9eda","#e19f39","#d53e4f")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#a9db95","#e19f39","#d53e4f")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
colours = c("#a9db95","#fcae8d","#d53e4f")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=cluster)) +
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
### k(군집 개수) 결정
# 클러스터링에서는 적절한 군집 개수의 선택이 중요합니다.
# 사전지식이 없으므로 Elbow point, Average Silhouette을 살펴보고 k를 결정하도록 하겠습니다.
# k-means 수행
result<-NULL
for (k in 1:10){
result[[k]]<-kmeans(data2,k,nstart=10)
}
## 1) Elbow point
# The total within-cluster sum of square(wss)이 작을수록 좋습니다.
# wss의 그래프을 그려보고 elbowpoint를 참고하겠습니다.
wss <- numeric(10)
for(k in 1:10){
wss[k]<-result[[k]]$tot.withinss
}
plot(wss,type="l")
abline(v=c(2,3),col="red",lty=2)
## 2) Average Silhouette
# 평균 실루엣이 최대가 되도록 하는 k가 군집의 수로 적절합니다.
avgsil<-numeric(10)
for (k in 2:10){
si<-summary(silhouette(result[[k]]$cluster,dist(data2)))
avgsil[k]<-si$avg.width
}
avgsil
plot(avgsil,type="l")
abline(v=c(2,3),col="red",lty=2)
data2
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
packages<-c("fpc", "cluster", "dplyr", "factoextra", "NbClust", "clValid", "FactoMineR", "fclust")
check.packages(packages)
# ------------------------------최적의 K 결정------------------------------
# 데이터 불러오기
data<-read.csv("df_data.csv")
data2<-as.data.frame(scale(data))
### k(군집 개수) 결정
# 클러스터링에서는 적절한 군집 개수의 선택이 중요합니다.
# 사전지식이 없으므로 Elbow point, Average Silhouette을 살펴보고 k를 결정하도록 하겠습니다.
# k-means 수행
result<-NULL
for (k in 1:10){
result[[k]]<-kmeans(data2,k,nstart=10)
}
## 1) Elbow point
# The total within-cluster sum of square(wss)이 작을수록 좋습니다.
# wss의 그래프을 그려보고 elbowpoint를 참고하겠습니다.
wss <- numeric(10)
for(k in 1:10){
wss[k]<-result[[k]]$tot.withinss
}
plot(wss,type="l")
abline(v=c(2,3),col="red",lty=2)
## 2) Average Silhouette
# 평균 실루엣이 최대가 되도록 하는 k가 군집의 수로 적절합니다.
avgsil<-numeric(10)
for (k in 2:10){
si<-summary(silhouette(result[[k]]$cluster,dist(data2)))
avgsil[k]<-si$avg.width
}
avgsil
plot(avgsil,type="l")
abline(v=c(2,3),col="red",lty=2)
## 3) 시각화
# 변수들의 상관관계를 파악하기 위해 산점도 그래프를 그려서 분산을 살펴본다,
panel.fun <- function(x, y, ...) { horizontal <- (par("usr")[1] + par("usr")[2]) / 2; vertical <- (par("usr")[3] + par("usr")[4]) / 2; text(horizontal, vertical, format(abs(cor(x,y)), digits=2)) }
pairs(data2, pch=21, bg=c("blue3"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
fviz_cluster(result[[2]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
fviz_cluster(result[[3]],data=data2,geom="point")
fviz_cluster(result[[4]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
fviz_cluster(result[[5]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
# 데이터를 표준화하되, 군집의 개수는 3개로 클러스터링하는 것으로 결정합니다.
### k-means clustering
(kmeans <- kmeans(data2,3,nstart=30))
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
## 2) Dunn Index
dunn.index<-numeric(10)
d <- dist(data2,method="euclidean")
for (k in 2:10){
dunn.index[k]<-dunn(d, result[[k]]$cluster)
}
dunn.index
#---------------------
### k-medoids clustering과의 비교
# pam 함수는 k-medoids clustering 함수입니다.
# k-Means 알고리즘보다 특이값이 대해서 안정적인 결과를 얻게 해줍니다.
avsil.pam<-numeric(20)
for (k in 2:20){
avsil.pam[k]<-pam(data2,k)$silinfo$avg.width
}
avsil.pam
which.max(avsil.pam)
#---------------------
# kmeans와 클러스터링의 결과를 비교해보겠습니다.
pam<-pam(data2,3)
plot(pam)
pamk.result <- pamk(data2)
pamk.result$nc # k=2
pamk.result$pamobject
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
set.seed(2255)
# 데이터를 표준화하되, 군집의 개수는 3개로 클러스터링하는 것으로 결정합니다.
### k-means clustering
(kmeans <- kmeans(data2,3,nstart=30))
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
# 데이터를 표준화하되, 군집의 개수는 3개로 클러스터링하는 것으로 결정합니다.
### k-means clustering
(kmeans <- kmeans(data2,3))
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
str(data2)
# ------------------------------최적의 K 결정------------------------------
# 데이터 불러오기
data<-read.csv("pamk_test.csv")
data2<-as.data.frame(scale(data))
### k(군집 개수) 결정
# 클러스터링에서는 적절한 군집 개수의 선택이 중요합니다.
# 사전지식이 없으므로 Elbow point, Average Silhouette을 살펴보고 k를 결정하도록 하겠습니다.
# k-means 수행
result<-NULL
for (k in 1:10){
result[[k]]<-kmeans(data2,k,nstart=10)
}
## 1) Elbow point
# The total within-cluster sum of square(wss)이 작을수록 좋습니다.
# wss의 그래프을 그려보고 elbowpoint를 참고하겠습니다.
wss <- numeric(10)
for(k in 1:10){
wss[k]<-result[[k]]$tot.withinss
}
plot(wss,type="l")
abline(v=c(2,3),col="red",lty=2)
## 2) Average Silhouette
# 평균 실루엣이 최대가 되도록 하는 k가 군집의 수로 적절합니다.
avgsil<-numeric(10)
for (k in 2:10){
si<-summary(silhouette(result[[k]]$cluster,dist(data2)))
avgsil[k]<-si$avg.width
}
avgsil
plot(avgsil,type="l")
abline(v=c(2,3),col="red",lty=2)
## 3) 시각화
# 변수들의 상관관계를 파악하기 위해 산점도 그래프를 그려서 분산을 살펴본다,
panel.fun <- function(x, y, ...) { horizontal <- (par("usr")[1] + par("usr")[2]) / 2; vertical <- (par("usr")[3] + par("usr")[4]) / 2; text(horizontal, vertical, format(abs(cor(x,y)), digits=2)) }
pairs(data2, pch=21, bg=c("blue3"), upper.panel = panel.fun, main = "Scatter Plot of Children welfare Dataset")
plot(data2, pch=result[[3]]$cluster, col=result[[3]]$cluster)
# k=2,3,4,5일 때 클러스터링을 시각화하여 살펴보겠습니다.
fviz_cluster(result[[2]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
fviz_cluster(result[[3]],data=data2,geom="point")
fviz_cluster(result[[4]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
fviz_cluster(result[[5]],data=data2,geom="point",stand=FALSE,ellipse.type="norm")
# 데이터를 표준화하되, 군집의 개수는 3개로 클러스터링하는 것으로 결정합니다.
### k-means clustering
(kmeans <- kmeans(data2,3))
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
## 2) Dunn Index
dunn.index<-numeric(10)
d <- dist(data2,method="euclidean")
for (k in 2:10){
dunn.index[k]<-dunn(d, result[[k]]$cluster)
}
dunn.index
#---------------------
### k-medoids clustering과의 비교
# pam 함수는 k-medoids clustering 함수입니다.
# k-Means 알고리즘보다 특이값이 대해서 안정적인 결과를 얻게 해줍니다.
avsil.pam<-numeric(20)
for (k in 2:20){
avsil.pam[k]<-pam(data2,k)$silinfo$avg.width
}
avsil.pam
which.max(avsil.pam)
#---------------------
# kmeans와 클러스터링의 결과를 비교해보겠습니다.
pam<-pam(data2,3)
plot(pam)
## 1) 실루엣
plot(silhouette(kmeans$cluster,dist=dist(data2)))
data2
# 데이터를 표준화하되, 군집의 개수는 3개로 클러스터링하는 것으로 결정합니다.
### k-means clustering
(kmeans <- kmeans(data2,3))
packages<-c("ggplot2", "ggmap", "raster", "rgeos", "maptools", "rgdal", "viridis", "mapproj", "extrafont", "ggrepel", "colorspace")
check.packages(packages)
register_google(key='AIzaSyBxaEToyRZGHM9iOSNr9glfxPLBituRQmk')
korea = shapefile('TL_SCCO_SIG.shp')
# 좌표계 변환
from.crs =  "+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs"
to.crs = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
proj4string(korea) <- CRS(from.crs)
korea<-spTransform(korea,CRS(to.crs))
korea@bbox # 변환된 좌표계 확인
map <- get_map(location='south korea', zoom=7, maptype='roadmap', color='bw')
abc = read.csv("choropleth.csv") # "data2.csv"
seoul = korea[korea$SIG_CD<=11740,]
seoul = fortify(seoul,region = 'SIG_CD')
seoul = merge(seoul,abc,by='id')
seoul.label <- read.csv("seoul_label.csv")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#fe9e63", "#ffeca0", "#a09f01", "#5bc0ff","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#fe9e63", "#93e637", "#a09f01", "#5bc0ff","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#fe9e63", "#80d720", "#a09f01", "#5bc0ff","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#fe9e63", "#f0f9a8", "#a5ac6e", "#5bc0ff","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#f0f9a8", "#a5ac6e", "#5bc0ff","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#f0f9a8", "#a5ac6e", "#6c9fbe","#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#f0f9a8", "#a5ac6e", "#6c9fbe","#44aaea")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#f0f9a8", "#a5ac6e", "#44aaea", "#6c9fbe")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#a9db95", "#67d93a", "#44aaea", "#6c9fbe")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#a9db95", "#7da26e", "#44aaea", "#6c9fbe")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#a9db95", "#7da26e", "#42aaea", "#3288bd")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d53e4f", "#d9828c", "#a9db95", "#7da26e", "#42aaea", "#2d79a8")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
#------------------지도 색칠 색상 지정------------------
# colours = c("#a9db95","#fcae8d","#d53e4f")
colours = c("#d9828c", "#d53e4f", "#a9db95", "#7da26e", "#42aaea", "#2d79a8")
#------------------지도 그래프 시각화------------------
ggplot() + geom_polygon(data=seoul,colour="Black",size=0.05, aes(x=long, y=lat, group=group, fill=detail)) + # fill=result
theme(plot.title = element_text(size=20),legend.title = element_text(size=10)) +
ggtitle("지역구별 아동복지 취약 지도") + scale_fill_gradientn (colours = colours, name = "그룹", guide = "legend") +
geom_text(data=seoul.label, aes(x=long, y=lat, label=city), size=7) # seoul.label 자료를 참고해서 지도에 지역구 이름 매핑
